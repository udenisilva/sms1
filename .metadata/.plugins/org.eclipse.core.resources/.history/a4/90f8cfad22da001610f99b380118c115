package com.lk.std.controller;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.lk.std.model.Attendance;
import com.lk.std.model.Branch;
import com.lk.std.model.Grade;
import com.lk.std.model.Marks;
import com.lk.std.model.Student;
import com.lk.std.service.BranchService;
import com.lk.std.service.GradeService;
import com.lk.std.service.MarksService;
import com.lk.std.service.StudentService;

@Controller
@RequestMapping
public class ResultsController {

	@Autowired
	StudentService studentService;
	
	@Autowired
	MarksService marksService;
	
	@Autowired
	GradeService gradeService;
	
	@Autowired
	BranchService branchService;
	
	  @RequestMapping(value = "/results", method = RequestMethod.GET)
	  public ModelAndView getHomePage(HttpServletRequest request) {
	    ModelMap modelMap = new ModelMap(); 
	    
	    long gradeId = 0;
		long branchId = 0;
		List<Grade> grades = null;
		List<Student> students = null;
		List<Marks> marks=null;
		modelMap.addAttribute("branchs", branchService.findAll());
		try {
			if (!StringUtils.isBlank(request.getParameter("branchId"))) {
				branchId = Long.parseLong(request.getParameter("branchId").trim());
			}
			if (branchId > 0) {
				Branch branch = branchService.findById(branchId);
				grades = gradeService.findByBranch(branch);
				modelMap.addAttribute("branchId", branchId);
				System.out.println("grade " + grades.size() + " " + grades.get(0).getId());
			} else {
				grades = new ArrayList<>();
			}
		} catch (Exception e) {
		}

		try {
			if (!StringUtils.isBlank(request.getParameter("gradeId"))) {
				gradeId = Long.parseLong(request.getParameter("gradeId").trim());
			}
			if (gradeId > 0) {
				Grade grade = gradeService.findById(gradeId);
				students = studentService.findByGrade(grade);
				modelMap.addAttribute("gradeId", gradeId);
				System.out.println(students.size());
				System.out.println("student " + students.get(0).getName());

				DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
				
				if (!StringUtils.isBlank(request.getParameter("date"))) { 
					Date bDate;
					bDate = df.parse(request.getParameter("date"));
					String newDateString = df.format(bDate);
					System.out.println(newDateString); 
					
					marks = attendanceService.findByGradeAndAttDate(grade,bDate);
					int count=0;
//					for (Student student : students) {
//						for (Attendance att : attendance) {
//							if(student.getId()==att.getStudent().getId());
//						}
//					}
					
					modelMap.addAttribute("attendances", attendance);
					
				}
				

			} else {
				attendance = new ArrayList<>();
				students = new ArrayList<>();
			}
		} catch (Exception e) {
		}

	 
	    return new ModelAndView("results", modelMap);
	  }
}
