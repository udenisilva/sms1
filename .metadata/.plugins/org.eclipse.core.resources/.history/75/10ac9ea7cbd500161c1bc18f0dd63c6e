package com.lk.std.controller;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.lk.std.model.Branch;
import com.lk.std.model.Grade;
import com.lk.std.model.Staff;
import com.lk.std.model.Student;
import com.lk.std.service.AttendanceService;
import com.lk.std.service.BranchService;
import com.lk.std.service.GradeService;
import com.lk.std.service.StudentService;

@Controller
@RequestMapping
public class StudentAttendanceController {

	
	@Autowired
	GradeService gradeService;
	
	@Autowired
	AttendanceService attendanceService;
	
	@Autowired
	BranchService branchService;
	
	@Autowired
	StudentService studentService;
	
	  @RequestMapping(value = "/studentattendance", method = RequestMethod.GET)
	  public ModelAndView getStudentAttendance(HttpServletRequest request) {
	    ModelMap modelMap = new ModelMap(); 
	    long gradeId = 0;
	    long branchId = 0;
	    List<Grade> grade = null;
		List<Student> students=null;
		
		modelMap.addAttribute("branchs", branchService.findAll());
		try {
			if (!StringUtils.isBlank(request.getParameter("branchId"))) {
				branchId = Long.parseLong(request.getParameter("branchId").trim());
			}
			if (branchId > 0) {
				Branch branch=branchService.findById(branchId);
				grade = gradeService.findByBranch(branch);
				modelMap.addAttribute("branchId",branchId);
				System.out.println("grade "+grade.size()+" "+grade.get(0).getId());
			} else {
				grade = new ArrayList<>();
			}
		} catch (Exception e) { 
		}
		
		try {
			if (!StringUtils.isBlank(request.getParameter("gradeId"))) {
				gradeId = Long.parseLong(request.getParameter("gradeId").trim());
			}
			if (gradeId > 0) {
				students = gradeService.findStudentById(gradeId);
				modelMap.addAttribute("gradeId",gradeId);
				System.out.println(students.size());
				System.out.println(students.get(0).getName());
			} else {
				students = new ArrayList<>();
			}
		} catch (Exception e) { 
		}
		
	    modelMap.addAttribute("grades",grade);	
	    modelMap.addAttribute("students",students);
	    return new ModelAndView("studentattendance", modelMap);
	  }
	  
	  
	   
}
